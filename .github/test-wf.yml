name: Example workflow for Codecov

on: 
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions coveralls
      - name: Test with tox
        run: tox -e cov
      - name: Upload coverage data to coveralls.io
        run: coveralls --submit=cov/cov.xml --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true
  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   run:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     env:
#       OS: ${{ matrix.os }}
#       PYTHON: '3.12'
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install tox tox-gh-actions
#     - name: Test with tox
#       run: tox -e cov
#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         env_vars: OS,PYTHON
#         fail_ci_if_error: true
#         files: ./cov/cov.xml
#         flags: unittests
#         name: codecov-umbrella
#         verbose: true

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install pytest
#         pip install pytest-cov
#     - name: Generate coverage report
#       run: |
#         pytest \
#             --cov-report term-missing \
#             --cov-report xml:cov.xml \
#             --cov pyslurmtq
# 
# name: Tests
# on:
#   - pull_request
# 
# on:
#   push:
#     branches: [master]
#     paths:
#       - 'src/**.py'
#       - 'setup.py'
#       - 'setup.py'
#       - '.github/workflows/tests.yml'
#   pull_request:
#     branches: [master]
#     paths:
#       - 'src/**.py'
#       - 'setup.py'
#       - 'setup.py'
#       - '.github/workflows/tests.yml'
#   schedule:
#     - cron: '0 0 1 * *'
# 
# jobs:
#   test:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         python-version: ['3.12']
# 
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install tox tox-gh-actions
#     - name: Test with tox
#       run: tox
#     - name: Upload coverage reports to Codecov
#       uses: codecov/codecov-action@v3
#       env:
#         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#       with:
#         fail_ci_if_error: true # optional (default = false)
#         verbose: true # optional (default = false)
#         flags: unittests
#         files: cov.xml